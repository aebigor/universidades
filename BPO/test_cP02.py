# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCP01():
  def setup_method(self, method):
    self.driver = webdriver.Remote(command_executor='http://localhost:4444/wd/hub', desired_capabilities=DesiredCapabilities.CHROME)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_cP01(self):
    # Test name: CP01
    # Step # | name | target | value
    # 1 | open | https://bpo-2.dyalogo.cloud/manager/login.php | 
    self.driver.get("https://bpo-2.dyalogo.cloud/manager/login.php")
    # 2 | setWindowSize | 1296x1000 | 
    self.driver.set_window_size(1296, 1000)
    # 3 | click | name=txtUsuario | 
    self.driver.find_element(By.NAME, "txtUsuario").click()
    # 4 | click | css=.col-xs-4 > .btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4 > .btn").click()
    # 5 | click | id=select2-cmbHuesped-container | 
    self.driver.find_element(By.ID, "select2-cmbHuesped-container").click()
    # 6 | click | css=.select2-search__field | 
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").click()
    # 7 | type | css=.select2-search__field | sena
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys("sena")
    # 8 | sendKeys | css=.select2-search__field | ${KEY_ENTER}
    self.driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys(Keys.ENTER)
    # 9 | click | id=btnGuardar | 
    self.driver.find_element(By.ID, "btnGuardar").click()
    # 10 | mouseOver | css=.fa-dashboard | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".fa-dashboard")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 11 | mouseOut | css=.fa-dashboard | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 12 | mouseOver | css=.fa-dashboard | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".fa-dashboard")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 13 | click | css=.fa-dashboard | 
    self.driver.find_element(By.CSS_SELECTOR, ".fa-dashboard").click()
    # 14 | mouseOut | css=.fa-dashboard | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 15 | click | css=#tiempo_real_1\.0 font > font | 
    self.driver.find_element(By.CSS_SELECTOR, "#tiempo_real_1\\.0 font > font").click()
    # 16 | mouseOver | linkText=JUANITA ROJAS PERALTA | 
    element = self.driver.find_element(By.LINK_TEXT, "JUANITA ROJAS PERALTA")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
  
