


# Canvas
# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pyautogui
import tkinter as tk
from tkinter import ttk

driver = webdriver.Chrome()
driver.get("https://bpo-2.dyalogo.cloud/manager/login")
driver.set_window_size(1382, 736)
  
  

  

    # Test name: CP01
    # Step # | name | target | value
    # 1 | open | https://bpo-2.dyalogo.cloud/manager/login.php | 

    # 3 | type | name=txtUsuario | santicri163@gmail.com
driver.find_element(By.NAME, "txtUsuario").send_keys("santicri163@gmail.com")
    # 4 | type | name=txtPassword | MqwoOP19
driver.find_element(By.NAME, "txtPassword").send_keys("MqwoOP190")
    # 5 | click | name=txtUsuario | 
driver.find_element(By.NAME, "txtUsuario").click()
driver.find_element(By.CSS_SELECTOR, ".col-xs-4 > .btn").click()
    # 6 | type | name=txtUsuario | senadyalogo@gmail.coms
driver.find_element(By.NAME, "txtUsuario").send_keys("senadyalogo@gmail.com")
    # 7 | type | name=txtPassword | 123456789
driver.find_element(By.NAME, "txtPassword").send_keys("123456789")
    # 8 | click | css=.col-xs-4 > .btn | 
driver.find_element(By.CSS_SELECTOR, ".col-xs-4 > .btn").click()
    # 9 | click | css=.select2-container--below .select2-selection__arrow | 
time.sleep(3)
try:
  driver.find_element(By.CSS_SELECTOR, ".select2-container--below .select2-selection__arrow").click()
      # 10 | click | css=.select2-search__field | 
  driver.find_element(By.CSS_SELECTOR, ".select2-search__field").click()
      # 11 | type | css=.select2-search__field | sen
  driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys("convatec")
      # 12 | sendKeys | css=.select2-search__field | ${KEY_ENTER}
  driver.find_element(By.CSS_SELECTOR, ".select2-search__field").send_keys(Keys.ENTER)
      # 13 | click | id=btnGuardar | 
  driver.find_element(By.ID, "btnGuardar").click()
except:
 #Hace clic en el campo de huésped
    driver.find_element(By.XPATH, '//*[@id="PonerHuesped"]/div/div/form/div[2]/div/span/span[1]/span').click()
    
    # Selecciona el campo para buscar
    Huesped = driver.find_element("xpath", '/html/body/span/span/span[1]/input')
    Huesped.send_keys("Convatec colombia", Keys.ENTER)
    
    # Hace clic en el botón de guardar
    driver.find_element("xpath", '//*[@id="btnGuardar"]').click()
time.sleep(3)
# Hace clic en el campo de huésped
#driver.find_element("xpath", '//*[@id="PonerHuesped"]/div/div/form/div[2]/div/span/span[1]/span').click()
#
## Selecciona el campo para buscar
#Huesped = driver.find_element("xpath", '/html/body/span/span/span[1]/input')
#Huesped.send_keys("SENA KIDS", Keys.ENTER)
#
## Hace clic en el botón de guardar
#driver.find_element("xpath", '//*[@id="btnGuardar"]').click()
#
## Espera 2 segundos
#time.sleep(2)

# Entra en la sección de estrategias
driver.find_element(By.XPATH, '/html/body/div[7]/aside/section/ul/li[4]/a').click()


driver.find_element(By.ID, "table_search_lista_navegacion").click()
driver.find_element(By.ID, "table_search_lista_navegacion").send_keys("Cvi")
driver.find_element(By.ID, "table_search_lista_navegacion").send_keys(Keys.ENTER) 
time.sleep(3)

driver.find_element(By.CSS_SELECTOR, ".fa-edit").click()

driver.find_element(By.CSS_SELECTOR, ".ion").click()



# Canvas

# Esperar hasta 10 segundos hasta que aparezca el elemento canvas
canvas_selector = '#myDiagramDiv > canvas'
canvas_element = driver.find_element(By.CSS_SELECTOR, canvas_selector)

# Obtener la posición del elemento canvas
canvas_locator = (By.ID, "myDiagramDiv")
canvas = WebDriverWait(driver, 10).until(EC.presence_of_element_located(canvas_locator))

script = "document.getElementById('myDiagramDiv').scrollTop += 1000;"
driver.execute_script(script)

# Esperar un tiempo para que el desplazamiento se realice (ajusta según sea necesario)
time.sleep(2)
canvas_selector = '#myDiagramDiv > canvas'
canvas_element = driver.find_element(By.CSS_SELECTOR, canvas_selector)

# Obtener la posición del elemento canvas
canvas_location = canvas_element.location

# Calcular la posición relativa dentro del canvas donde deseas hacer clic
x_offset = 180   # ajusta según tus necesidades
y_offset = 150  # ajusta según tus necesidades


# Calcular las coordenadas absolutas dentro de la ventana del navegador
x_absolute = canvas_location['x'] + x_offset
y_absolute = canvas_location['y'] + y_offset

# Mover el mouse a las coordenadas absolutas y hacer clic
#pyautogui.moveTo(x_absolute, y_absolute, duration=1)
#pyautogui.mouseDown()
pyautogui.moveTo(x_absolute, y_absolute, duration=1)
pyautogui.move(860, 200, duration=1)
pyautogui.dragTo(600, 500, duration=1)
# Esperar 2 segundoss
time.sleep(2)
# Realizar un doble clic en la posición final
pyautogui.click()

# Esperar hasta 10 segundos hasta que aparezca el elemento canvas
canvas_selector = '#myDiagramDiv > canvas'
canvas_element = driver.find_element(By.CSS_SELECTOR, canvas_selector)

# Obtener la posición del elemento canvas
canvas_location = canvas_element.location

# Calcular la posición relativa dentro del canvas donde deseas hacer clic
x_offset = 180   # ajusta según tus necesidades
y_offset = 150  # ajusta según tus necesidades

# Calcular las coordenadas absolutas dentro de la ventana del navegador
x_absolute = canvas_location['x'] + x_offset
y_absolute = canvas_location['y'] + y_offset

# Mover el mouse a las coordenadas absolutas y hacer clic
#pyautogui.moveTo(x_absolute, y_absolute, duration=1)
#pyautogui.mouseDown()
pyautogui.moveTo(x_absolute, y_absolute, duration=1)
pyautogui.move(480, 300, duration=2)
# Esperar 2 segundoss
time.sleep(2)
# Realizar un doble clic en la posición final
pyautogui.doubleClick()
    # 3 | click | css=#myDiagramDiv > canvas | 
#driver.find_element(By.CSS_SELECTOR, "#myDiagramDiv > canvas").click()
## 4 | doubleClick | css=#myDiagramDiv > canvas | 
#element = driver.find_element(By.CSS_SELECTOR, "#myDiagramDiv > canvas")
#actions = ActionChains(driver)
#actions.double_click(element).perform()
# 5 | runScript | window.scrollTo(0,0) | 
time.sleep(4)
# 28 | click | linkText=ADMINISTRAR REGISTROS | 
driver.find_element(By.LINK_TEXT, "ADMINISTRAR REGISTROS").click()
time.sleep(4)
# 29 | doubleClick | linkText=ADMINISTRAR REGISTROS | 
element = driver.find_element(By.ID, "abrir_modal_admin")
actions = ActionChains(driver)
actions.double_click(element).perform()
time.sleep(4)
# 31 | click | linkText=Acciones | 
driver.find_element(By.LINK_TEXT, "Acciones").click()
time.sleep(4)

# 32 | click | id=sel_activo_acciones | 
driver.find_element(By.ID, "sel_activo_acciones").click()
# 33 | select | id=sel_activo_acciones | label=ACTIVO
dropdown = driver.find_element(By.ID, "sel_activo_acciones")
dropdown.find_element(By.XPATH, "//option[. = 'ACTIVO']").click()
# 34 | click | id=aplicar_filtros | 
driver.find_element(By.ID, "aplicar_filtros").click()
# 35 | click | id=cargardtaosCampanhaCompleto | 
driver.find_element(By.ID, "cargardtaosCampanhaCompleto").click()
time.sleep(4)
pyautogui.moveTo(x_absolute, y_absolute, duration=1)
pyautogui.move(-80, -60, duration=2)
# Esperar 2 segundoss
time.sleep(2)   
# Realizar un doble clic en la posición final   
pyautogui.doubleClick()
# 36 | click | id=arcExcell | 
#driver.find_element(By.ID, "NombrearcExcell").click()
time.sleep(10)
# 37 | type | id=arcExcell | C:\fakepath\cateterismo 20-12-2023.xlsx

# 38 | click | id=cmbColumnaP | 
driver.find_element(By.ID, "cmbColumnaP").click()
# 39 | doubleClick | id=cmbColumnaP | 
element = driver.find_element(By.ID, "cmbColumnaP")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 40 | click | id=cmbColumnaP | 
driver.find_element(By.ID, "cmbColumnaP").click()
# 41 | select | id=cmbColumnaP | label=# IDENTIFICACION
dropdown = driver.find_element(By.ID, "cmbColumnaP")
Option= driver.find_element(By.XPATH,'//*[@id="cmbColumnaP"]/option[3]')
Option.click()
time.sleep(2)

# 42 | click | id=cheRegistrosCargarNuevo | 
driver.find_element(By.ID, "cheRegistrosCargarNuevo").click()
# 43 | doubleClick | id=cheRegistrosCargarNuevo | 
element = driver.find_element(By.ID, "cheRegistrosCargarNuevo")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 44 | click | id=cheRegistrosCargarNuevo | 
driver.find_element(By.ID, "cheRegistrosCargarNuevo").click()
# 45 | doubleClick | id=cheRegistrosCargarNuevo | 
element = driver.find_element(By.ID, "cheRegistrosCargarNuevo")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 46 | click | id=cheRegistrosCargarNuevo | 
driver.find_element(By.ID, "cheRegistrosCargarNuevo").click()
# 47 | click | id=option1 | 
driver.find_element(By.ID, "option1").click()
# 48 | click | id=selExcel1 | 
driver.find_element(By.ID, "selExcel1").click()
# 49 | select | id=selExcel1 | label=ID
dropdown = driver.find_element(By.ID, "selExcel1")
dropdown.find_element(By.XPATH, '//*[@id="selExcel1"]/option[2]').click()
# 50 | click | id=selExcel2 | 
driver.find_element(By.ID, "selExcel2").click()
# 51 | select | id=selExcel2 | label=NOMBRES
dropdown = driver.find_element(By.ID, "selExcel2")
dropdown.find_element(By.XPATH, '//*[@id="selExcel2"]/option[4]').click()
# 52 | click | id=selExcel3 | 
driver.find_element(By.ID, "selExcel3").click()
# 53 | doubleClick | id=selExcel3 | 
element = driver.find_element(By.ID, "selExcel3")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 54 | click | id=selExcel3 | 
driver.find_element(By.ID, "selExcel3").click()
# 55 | select | id=selExcel3 | label=APELLIDO 1
dropdown = driver.find_element(By.ID, "selExcel3")
dropdown.find_element(By.XPATH, '//*[@id="selExcel3"]/option[5]').click()
# 56 | click | id=selExcel4 | 
driver.find_element(By.ID, "selExcel4").click()
# 57 | doubleClick | id=selExcel4 | 
element = driver.find_element(By.ID, "selExcel4")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 58 | click | id=selExcel4 | 
driver.find_element(By.ID, "selExcel4").click()
# 59 | select | id=selExcel4 | label=APELLIDO 2
dropdown = driver.find_element(By.ID, "selExcel4")
dropdown.find_element(By.XPATH, '//*[@id="selExcel4"]/option[6]').click()
# 60 | click | id=selExcel5 | 
driver.find_element(By.ID, "selExcel5").click()
# 61 | select | id=selExcel5 | label=EPS
dropdown = driver.find_element(By.ID, "selExcel5")
dropdown.find_element(By.XPATH, '//*[@id="selExcel5"]/option[7]').click()
# 62 | click | id=selExcel3 | 
driver.find_element(By.ID, "selExcel3").click()
# 63 | select | id=selExcel3 | label=EPS
dropdown = driver.find_element(By.ID, "selExcel3")
dropdown.find_element(By.XPATH, '//*[@id="selExcel5"]/option[7]').click()
# 66 | click | id=selExcel6 | 
driver.find_element(By.ID, "selExcel6").click()
# 67 | select | id=selExcel6 | label=IPS
dropdown = driver.find_element(By.ID, "selExcel6")
dropdown.find_element(By.XPATH, '//*[@id="selExcel6"]/option[8]').click()
# 68 | click | id=selExcel7 | 
driver.find_element(By.ID, "selExcel7").click()
# 69 | select | id=selExcel7 | label=TELEFONO
dropdown = driver.find_element(By.ID, "selExcel7")
dropdown.find_element(By.XPATH, '//*[@id="selExcel7"]/option[9]').click()
# 70 | click | id=selExcel8 | 
driver.find_element(By.ID, "selExcel8").click()
# 71 | doubleClick | id=selExcel8 | 
element = driver.find_element(By.ID, "selExcel8")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 72 | click | id=selExcel8 | 
driver.find_element(By.ID, "selExcel8").click()
# 73 | doubleClick | id=selExcel8 | 
element = driver.find_element(By.ID, "selExcel8")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 74 | click | id=selExcel8 | 
driver.find_element(By.ID, "selExcel8").click()
# 75 | select | id=selExcel8 | label=CELULAR
dropdown = driver.find_element(By.ID, "selExcel8")
dropdown.find_element(By.XPATH, '//*[@id="selExcel8"]/option[10]').click()
# 76 | click | id=selExcel9 | 
driver.find_element(By.ID, "selExcel9").click()
# 77 | select | id=selExcel9 | label=ESTADO
dropdown = driver.find_element(By.ID, "selExcel9")
dropdown.find_element(By.XPATH, '//*[@id="selExcel9"]/option[11]').click()
# 78 | click | id=selExcel10 | 
driver.find_element(By.ID, "selExcel10").click()
# 79 | select | id=selExcel10 | label=FECHA
dropdown = driver.find_element(By.ID, "selExcel10")
dropdown.find_element(By.XPATH, '//*[@id="selExcel10"]/option[12]').click()
# 80 | click | id=selDB1 | 
driver.find_element(By.ID, "selDB1").click()
# 81 | select | id=selDB1 | label=ID
dropdown = driver.find_element(By.ID, "selDB1")
dropdown.find_element(By.XPATH, '//*[@id="selDB1"]/option[8]').click()
# 82 | click | id=selDB2 | 
driver.find_element(By.ID, "selDB2").click()
# 83 | select | id=selDB2 | label=NOMBRES
dropdown = driver.find_element(By.ID, "selDB2")
dropdown.find_element(By.XPATH, '//*[@id="selDB2"]/option[19]').click()
# 84 | click | id=selDB3 | 
driver.find_element(By.ID, "selDB3").click()
# 85 | select | id=selDB3 | label=APELLIDO 1
dropdown = driver.find_element(By.ID, "selDB3")
dropdown.find_element(By.XPATH, '//*[@id="selDB3"]/option[26]').click()
# 86 | click | id=selDB4 | 
driver.find_element(By.ID, "selDB4").click()
# 87 | select | id=selDB4 | label=APELLIDO 2
dropdown = driver.find_element(By.ID, "selDB4")
dropdown.find_element(By.XPATH, '//*[@id="selDB4"]/option[29]').click()
# 88 | click | id=selDB5 | 
driver.find_element(By.ID, "selDB5").click()
# 89 | select | id=selDB5 | label=EPS
dropdown = driver.find_element(By.ID, "selDB5")
dropdown.find_element(By.XPATH, '//*[@id="selDB5"]/option[59]').click()
# 90 | click | id=selDB6 | 
driver.find_element(By.ID, "selDB6").click()
# 91 | select | id=selDB6 | label=IPS
dropdown = driver.find_element(By.ID, "selDB6")
dropdown.find_element(By.XPATH, '//*[@id="selDB6"]/option[60]').click()
# 92 | click | id=selDB5 | 
driver.find_element(By.ID, "selDB5").click()
# 93 | click | id=selDB7 | 
driver.find_element(By.ID, "selDB7").click()
# 94 | doubleClick | id=selDB7 | 
element = driver.find_element(By.ID, "selDB7")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 95 | click | id=selDB7 | 
driver.find_element(By.ID, "selDB7").click()
# 96 | select | id=selDB7 | label=TELEFONO
dropdown = driver.find_element(By.ID, "selDB7")
dropdown.find_element(By.XPATH, '//*[@id="selDB7"]/option[49]').click()
# 97 | click | id=selDB8 | 
driver.find_element(By.ID, "selDB8").click()
# 98 | select | id=selDB8 | label=CELULAR
dropdown = driver.find_element(By.ID, "selDB8")
dropdown.find_element(By.XPATH, '//*[@id="selDB8"]/option[44]').click()
# 99 | click | id=selDB9 | 
driver.find_element(By.ID, "selDB9").click()
# 100 | select | id=selDB9 | label=ESTADO
dropdown = driver.find_element(By.ID, "selDB9")
dropdown.find_element(By.XPATH, '//*[@id="selDB9"]/option[62]').click()
# 101 | click | id=selDB5 | 
driver.find_element(By.ID, "selDB5").click()
# 102 | click | id=selDB10 | 
driver.find_element(By.ID, "selDB10").click()
# 103 | select | id=selDB10 | label=FECHA INGRESO
dropdown = driver.find_element(By.ID, "selDB10")
dropdown.find_element(By.XPATH, '//*[@id="selDB10"]/option[15]').click()
# 104 | click | id=valDB7 | 
driver.find_element(By.ID, "valDB7").click()
# 105 | doubleClick | id=valDB7 | 
element = driver.find_element(By.ID, "valDB7")
actions = ActionChains(driver)
actions.double_click(element).perform()
# 106 | click | id=valDB7 | 
driver.find_element(By.ID, "valDB7").click()
# 107 | select | id=valDB7 | label=No Validar
dropdown = driver.find_element(By.ID, "valDB7")
dropdown.find_element(By.XPATH, '//*[@id="valDB7"]/option[1]').click()

# 108 | click | id=valDB8 | 
driver.find_element(By.ID, "valDB8").click()
# 109 | select | id=valDB8 | label=No Validar
dropdown = driver.find_element(By.ID, "valDB8")
dropdown.find_element(By.XPATH, '//*[@id="valDB8"]/option[1]').click()

# 110 | click | css=#curpo_tabla_validaciones > tr:nth-child(10) > td:nth-child(3) | 
driver.find_element(By.CSS_SELECTOR, "#curpo_tabla_validaciones > tr:nth-child(10) > td:nth-child(3)").click()
# 111 | click | css=#btnExcell > .fa | 
driver.find_element(By.CSS_SELECTOR, "#btnExcell > .fa").click()
time.sleep(20)

# 112 | click | id=cierraimportacion | 
driver.find_element(By.ID, "cierraimportacion").click()
# 113 | doubleClick | css=.blockOverlay | 
element = driver.find_element(By.CSS_SELECTOR, ".blockOverlay")
actions = ActionChains(driver)
actions.double_click(element).perform()
time.sleep(7)
# 114 | click | css=.modal-lg #refrescarGrillas | 
driver.find_element(By.CSS_SELECTOR, ".modal-lg #refrescarGrillas").click()
time.sleep(7)
# 115 | click | css=div:nth-child(1) > .btn-default:nth-child(2) | 
driver.find_element(By.CSS_SELECTOR, "div:nth-child(1) > .btn-default:nth-child(2)").click()
