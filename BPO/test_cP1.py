# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCP1():
  def setup_method(self, method):
    self.driver = webdriver.Remote(command_executor='http://localhost:4444/wd/hub', desired_capabilities=DesiredCapabilities.CHROME)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_cP1(self):
    # Test name: CP1
    # Step # | name | target | value
    # 1 | open | https://qa.dyalogo.cloud/manager/modulo/ruta/entrantes/223681095d1b67e4864c072ce657e1a6/3432/1 | 
    self.driver.get("https://qa.dyalogo.cloud/manager/modulo/ruta/entrantes/223681095d1b67e4864c072ce657e1a6/3432/1")
    # 2 | setWindowSize | 1382x744 | 
    self.driver.set_window_size(1382, 744)
    # 3 | click | linkText=CONFIGURACIÓN TEMAS TELEFONICOS | 
    self.driver.find_element(By.LINK_TEXT, "CONFIGURACIÓN TEMAS TELEFONICOS").click()
    # 4 | click | id=G10_C330 | 
    self.driver.find_element(By.ID, "G10_C330").click()
    # 5 | click | id=Save | 
    self.driver.find_element(By.ID, "Save").click()
    # 6 | mouseOver | id=Save | 
    element = self.driver.find_element(By.ID, "Save")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 7 | mouseOut | id=Save | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 8 | click | css=#myDiagramDiv > canvas | 
    self.driver.find_element(By.CSS_SELECTOR, "#myDiagramDiv > canvas").click()
    # 9 | click | css=#myDiagramDiv > canvas | 
    self.driver.find_element(By.CSS_SELECTOR, "#myDiagramDiv > canvas").click()
    # 10 | doubleClick | css=#myDiagramDiv > canvas | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#myDiagramDiv > canvas")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    # 11 | runScript | window.scrollTo(0,200) | 
    self.driver.execute_script("window.scrollTo(0,200)")
    # 12 | click | linkText=CONFIGURACIÓN TEMAS TELEFONICOS | 
    self.driver.find_element(By.LINK_TEXT, "CONFIGURACIÓN TEMAS TELEFONICOS").click()
    # 13 | click | id=ivr_encuesta | 
    driver.find_element(By.ID, "ivr_encuesta").click()
    # 14 | select | id=ivr_encuesta | label=Pruebas_Bienvenida
    dropdown = driver.find_element(By.ID, "ivr_encuesta")
    dropdown.find_element(By.XPATH, "//option[. = 'Pruebas_Bienvenida']").click()
    # 15 | click | id=G10_C330 | 
    self.driver.find_element(By.ID, "G10_C330").click()
    # 16 | click | id=Save | 
    self.driver.find_element(By.ID, "Save").click()
  
